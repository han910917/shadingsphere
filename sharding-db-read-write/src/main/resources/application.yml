spring:
  shardingsphere:
    datasource:
      names: master0,master1,slave0,slave1
      master0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/db0?characterEncoding=utf-8&serverTimezone=UTC
        username: root
        password: root
      master1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/db1?characterEncoding=utf-8&serverTimezone=UTC
        username: root
        password: root
      slave0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3307/db0?characterEncoding=utf-8&serverTimezone=UTC
        username: root
        password: root
      slave1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3307/db1?characterEncoding=utf-8&serverTimezone=UTC
        username: root
        password: root
    sharding:
      tables:
        user:
          actualDataNodes: db$->{0..1}.user
          databaseStrategy:
            inline:
              shardingColumn: id
              algorithmExpression: master$->{id%2}
          keyGenerator:
            type: SNOWFLAKE
            column: id
      default-key-generator:
        type: SNOWFLAKE
        column: id
      binding-tables: user
      master-slave-rules:
        db0:
          masterDataSourceName: master0
          slaveDataSourceNames: slave0
          loadBalanceAlgorithmType: ROUND_ROBIN
        db1:
          masterDataSourceName: master1
          slaveDataSourceNames: slave1
          loadBalanceAlgorithmType: ROUND_ROBIN
    props:
      sql:
        show: true
  main:
    allow-bean-definition-overriding: true

