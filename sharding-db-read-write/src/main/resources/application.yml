spring:
  shardingsphere:
    datasource:
      names: master0,master1,slave0,slave1
      master0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/db0?characterEncoding=utf-8&serverTimezone=UTC
        username: root
        password: root
      master1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/db1?characterEncoding=utf-8&serverTimezone=UTC
        username: root
        password: root
      slave0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3307/db0?characterEncoding=utf-8&serverTimezone=UTC
        username: root
        password: root
      slave1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3307/db1?characterEncoding=utf-8&serverTimezone=UTC
        username: root
        password: root
    sharding:
      default-database-strategy:
        inline:
          sharding-column: id
          algorithm-expression: master$->{id % 2}
        binding-tables: user
        default-data-source-name: master0
        tables:
          user:
            key-generator:
              column: id
              type: SNOWFLAKE
#    masterslave:
#      name: user
#      master-data-source-name: master0,master1
#      slave-data-source-names: slave0,db1slave
#      load-balance-algorithm-type: round_robin
    props:
      sql:
        show: true
  main:
    allow-bean-definition-overriding: true

